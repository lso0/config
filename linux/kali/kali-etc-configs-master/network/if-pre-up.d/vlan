#!/bin/sh

# Most of this stuff is to enable vlans

STATEDIR=/run/network/vlan

case "$IFACE" in
  # Ignore any alias (#272891) which uses <interface>:<alabel>
  *:*)
    exit 0
  ;;
  vlan0*)
    #vconfig set_name_type VLAN_PLUS_VID
    mkdir -p "$STATEDIR" && echo "VLAN_PLUS_VID" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/vlan0*//"`
  ;;
  vlan*)
    #vconfig set_name_type VLAN_PLUS_VID_NO_PAD
    mkdir -p "$STATEDIR" && echo "VLAN_PLUS_VID_NO_PAD" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/vlan0*//"`
  ;;
  eth*.0*|bond*.0*|wlan*.0*|em*.0*|p[0-9]*.0*)
    # Silently ignore interfaces which ifupdown handles on its own
    # If IF_BRIDGE_PORTS is set, probably we're called by bridge-utils
    [ -z "$IF_VLAN_RAW_DEVICE" -a -z "$IF_BRIDGE_PORTS" ] && exit 0
    #vconfig set_name_type DEV_PLUS_VID
    mkdir -p "$STATEDIR" && echo "DEV_PLUS_VID" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/eth[0-9][0-9]*\.0*//g;s/bond[0-9][0-9]*\.0*//g;s/wlan[0-9][0-9]*\.0*//g;s/em[0-9][0-9]*\.0*//g;s/p[0-9][0-9]*\(p[0-9][0-9]*\)\?\(_[0-9][0-9]*\)\?\.0*//g"`
    IF_VLAN_RAW_DEVICE=`echo $IFACE|sed "s/\(eth[0-9][0-9]*\)\..*/\1/;s/\(bond[0-9][0-9]*\)\..*/\1/;s/\(wlan[0-9][0-9]*\)\..*/\1/;s/\(em[0-9][0-9]*\)\..*/\1/;s/\(p[0-9][0-9]*\(p[0-9][0-9]*\)\?\(_[0-9][0-9]*\)\?\)\..*/\1/"`
  ;;
  eth*.*|bond*.*|wlan*.*|em*.*|p[0-9]*.*)
    # Silently ignore interfaces which ifupdown handles on its own
    # If IF_BRIDGE_PORTS is set, probably we're called by bridge-utils
    [ -z "$IF_VLAN_RAW_DEVICE" -a -z "$IF_BRIDGE_PORTS" ] && exit 0
    #vconfig set_name_type DEV_PLUS_VID_NO_PAD
    mkdir -p "$STATEDIR" && echo "DEV_PLUS_VID_NO_PAD" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/eth[0-9][0-9]*\.0*//g;s/bond[0-9][0-9]*\.0*//g;s/wlan[0-9][0-9]*\.0*//g;s/em[0-9][0-9]*\.0*//g;s/p[0-9][0-9]*\(p[0-9][0-9]*\)\?\(_[0-9][0-9]*\)\?\.0*//g"`
    IF_VLAN_RAW_DEVICE=`echo $IFACE|sed "s/\(eth[0-9][0-9]*\)\..*/\1/;s/\(bond[0-9][0-9]*\)\..*/\1/;s/\(wlan[0-9][0-9]*\)\..*/\1/;s/\(em[0-9][0-9]*\)\..*/\1/;s/\(p[0-9][0-9]*\(p[0-9][0-9]*\)\?\(_[0-9][0-9]*\)\?\)\..*/\1/"`
  ;;
  *.0*)
    # Silently ignore interfaces which we do not (know how to) support
    [ -z "$IF_VLAN_RAW_DEVICE" ] && exit 0
    #vconfig set_name_type DEV_PLUS_VID
    mkdir -p "$STATEDIR" && echo "DEV_PLUS_VID" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/[^.]*\.0*//g"`
  ;;
  *.*)
    # Silently ignore interfaces which we do not (know how to) support
    [ -z "$IF_VLAN_RAW_DEVICE" ] && exit 0
    #vconfig set_name_type DEV_PLUS_VID_NO_PAD
    mkdir -p "$STATEDIR" && echo "DEV_PLUS_VID_NO_PAD" > "$STATEDIR/name-type"
    VLANID=`echo $IFACE|sed "s/[^.]*\.0*//g"`
  ;;

  *)
    exit 0
  ;;
esac

if [ -n "$IF_MTU" -a -n "$IF_VLAN_RAW_DEVICE" ]; then
    CUR_DEV_MTU=$(cat /sys/class/net/$IF_VLAN_RAW_DEVICE/mtu)
    # increase the vlan raw device mtu if needed
    if [ -n "$CUR_DEV_MTU" ] && [ $CUR_DEV_MTU -lt $IF_MTU ]; then
        ip link set dev $IF_VLAN_RAW_DEVICE mtu $IF_MTU
    fi
fi

if [ -n "$IF_VLAN_RAW_DEVICE" ] && [ ! -d /sys/class/net/$IFACE ]; then
    if ! ip link show dev "$IF_VLAN_RAW_DEVICE" > /dev/null; then
        echo "$IF_VLAN_RAW_DEVICE does not exist, unable to create $IFACE"
        exit 1
    fi
    if [ ! -e "/sys/class/net/$IFACE" ]; then
        ip link set up dev $IF_VLAN_RAW_DEVICE
        #vconfig add $IF_VLAN_RAW_DEVICE $VLANID
        NAME_TYPE=DEV_PLUS_VID_NO_PAD
        [ -r "$STATEDIR/name-type" ] && NAME_TYPE=$(cat "$STATEDIR/name-type")
        case "$NAME_TYPE" in
            VLAN_PLUS_VID)
                NAME="$(printf vlan%.4d "$VLANID")"
                ;;
            VLAN_PLUS_VID_NO_PAD)
                NAME="vlan$VLANID"
                ;;
            DEV_PLUS_VID)
                NAME="$(printf %s.%.4d "$IF_VLAN_RAW_DEVICE" "$VLANID")"
                ;;
            DEV_PLUS_VID_NO_PAD)
                NAME="$IF_VLAN_RAW_DEVICE.$VLANID"
                ;;
        esac
        ip link add link "$IF_VLAN_RAW_DEVICE" name "$NAME" \
            type vlan id "$VLANID"
    fi
fi

# This is not vlan specific, and should actually go somewhere else.
if [ -n "$IF_HW_MAC_ADDRESS" ]; then
    ip link set $IFACE address $IF_HW_MAC_ADDRESS
fi
